---
// CTAButton.astro
// Composant réutilisable pour les boutons d'appel à l'action

interface Props {
  href: string;
  text: string;
  primary?: boolean;
  large?: boolean;
  onclick?: string;
}

const { 
  href, 
  text, 
  primary = false, 
  large = false, 
  onclick = undefined
} = Astro.props;

const buttonClass = `btn ${primary ? 'btn-primary' : 'btn-secondary'} ${large ? 'btn-lg' : ''}`;
---

<a href={href} class={buttonClass} onclick={onclick}>
  {text}
  <span class="btn-arrow">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="5" y1="12" x2="19" y2="12"></line><polyline points="12 5 19 12 12 19"></polyline></svg>
  </span>
</a>

<style>
  .btn {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0.75rem 1.5rem;
    border-radius: var(--radius);
    font-weight: 600;
    transition: var(--transition);
    cursor: pointer;
    border: none;
    outline: none;
    position: relative;
    overflow: hidden;
    gap: 0.5rem;
  }
  
  .btn-primary {
    background-color: var(--accent);
    color: var(--background);
    box-shadow: 0 0 20px rgba(2, 247, 145, 0.25);
  }
  
  .btn-primary:hover {
    background-color: var(--accent-dark);
    box-shadow: 0 0 30px rgba(2, 247, 145, 0.4);
    transform: translateY(-2px);
  }
  
  .btn-primary:active {
    transform: translateY(0);
  }
  
  .btn-secondary {
    background-color: transparent;
    border: 2px solid var(--accent);
    color: var(--accent);
  }
  
  .btn-secondary:hover {
    background-color: rgba(2, 247, 145, 0.1);
    transform: translateY(-2px);
  }
  
  .btn-secondary:active {
    transform: translateY(0);
  }
  
  .btn-lg {
    padding: 1rem 2rem;
    font-size: 1.125rem;
  }
  
  .btn-arrow {
    display: inline-flex;
    align-items: center;
    transition: transform 0.3s ease;
  }
  
  .btn:hover .btn-arrow {
    transform: translateX(4px);
  }
  
  /* Animation de l'effet d'onde lors du clic */
  .btn::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.4);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1) translate(-50%, -50%);
    transform-origin: 0% 0%;
  }
  
  .btn:active::after {
    opacity: 1;
    transform: scale(50) translate(-50%, -50%);
    transition: transform 0.6s, opacity 0.6s;
  }
  
  .btn-primary:active::after {
    background: rgba(0, 0, 0, 0.1);
  }
  
  .btn-secondary:active::after {
    background: rgba(2, 247, 145, 0.2);
  }
  
  @media (max-width: 768px) {
    .btn {
      width: 100%;
    }
  }
</style>